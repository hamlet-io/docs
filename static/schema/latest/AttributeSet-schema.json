{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "aws_s3_notification": {
      "description": "AWS S3 specific configuration options for notifications",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Suffix": {
          "type": "string"
        },
        "aws:QueuePermissionMigration": {
          "default": false,
          "description": "Deprecation alert: set to true once policy updated for queue",
          "type": "boolean"
        },
        "Events": {
          "default": [
            "create"
          ],
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array",
          "enum": [
            "create",
            "delete",
            "restore",
            "reducedredundancy"
          ]
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "Links": {
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
        },
        "Prefix": {
          "type": "string"
        },
        "aws:TopicPermissionMigration": {
          "default": false,
          "description": "Deprecation alert: set to true once policy updated for topic",
          "type": "boolean"
        }
      }
    },
    "link": {
      "description": "A relationship between Components.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SubComponent": {
          "type": "string"
        },
        "IncludeInContext": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "Include the attributes provided by this link in the environment context",
          "type": "array"
        },
        "Task": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "Instance": {
          "type": "string"
        },
        "Mount": {
          "type": "string"
        },
        "Product": {
          "type": "string"
        },
        "NetworkACL": {
          "type": "string"
        },
        "Direction": {
          "description": "The direction the role applies to between the components",
          "type": "string"
        },
        "Any": {
          "type": "string"
        },
        "Segment": {
          "type": "string"
        },
        "Assignment": {
          "type": "string"
        },
        "Function": {
          "type": "string"
        },
        "Tenant": {
          "type": "string"
        },
        "Endpoint": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Branch": {
          "type": "string"
        },
        "PortMapping": {
          "type": "string"
        },
        "Component": {
          "type": "string"
        },
        "Client": {
          "type": "string"
        },
        "RegistryService": {
          "type": "string"
        },
        "Route": {
          "type": "string"
        },
        "LinkRef": {
          "type": "string"
        },
        "DataBucket": {
          "type": "string"
        },
        "Tier": {
          "type": "string"
        },
        "ActiveRequired": {
          "description": "Require that the linked occurrence has been deployed and is active",
          "type": "boolean"
        },
        "Connection": {
          "type": "string"
        },
        "Resource": {
          "type": "string"
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "Service": {
          "type": "string"
        },
        "AuthProvider": {
          "type": "string"
        },
        "Role": {
          "description": "The role of the relationship between the components",
          "type": "string"
        },
        "RouteTable": {
          "type": "string"
        },
        "Secret": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Environment": {
          "type": "string"
        },
        "Rule": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "DataFeed": {
          "type": "string"
        }
      }
    },
    "networkrule": {
      "description": "Network Access rule configuration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SecurityGroups": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "A list of security groups or ids - for internal use only",
          "type": "array"
        },
        "Description": {
          "description": "A description that will be applied to the rule",
          "type": "string"
        },
        "Ports": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "A list of port ids from the Ports reference",
          "type": "array"
        },
        "IPAddressGroups": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "A list of IP Address groups ids from the IPAddressGroups reference",
          "type": "array"
        }
      }
    },
    "operatingsystem": {
      "description": "Standard Configuration options to define an operating system",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "MajorVersion": {
          "description": "The major version of the distribution",
          "type": "string"
        },
        "Architecture": {
          "description": "The CPU Architecture used",
          "type": "string",
          "enum": [
            "i386",
            "x86_64",
            "arm64"
          ]
        },
        "Distribution": {
          "description": "The distribution of the operating system",
          "type": "string"
        },
        "Family": {
          "description": "The broad family of operating system",
          "type": "string",
          "enum": [
            "linux",
            "windows",
            "macos"
          ]
        },
        "MinorVersion": {
          "description": "The minor version of the distribution major version",
          "type": "string"
        }
      }
    },
    "table_hosting": {
      "description": "Hosting and capacity configuration for global db tables",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Capacity": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Read": {
              "default": 1,
              "description": "When using provisioned billing the maximum RCU of the table",
              "type": "number"
            },
            "Write": {
              "default": 1,
              "description": "When using provisioned billing the maximum WCU of the table",
              "type": "number"
            }
          }
        },
        "Encrypted": {
          "default": true,
          "description": "Enable at rest encryption",
          "type": "boolean"
        },
        "Billing": {
          "default": "provisioned",
          "description": "The billing mode for the table",
          "type": "string",
          "enum": [
            "provisioned",
            "per-request"
          ]
        },
        "Backup": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Enabled": {
              "default": false,
              "description": "Enables point in time recovery on the table",
              "type": "boolean"
            }
          }
        },
        "Stream": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Enabled": {
              "default": false,
              "description": "Enables event change streams for the table",
              "type": "boolean"
            },
            "ViewType": {
              "default": "NEW_IMAGE",
              "description": "The change notification event content",
              "type": "string",
              "enum": [
                "KEYS_ONLY",
                "NEW_IMAGE",
                "OLD_IMAGE",
                "NEW_AND_OLD_IMAGES"
              ]
            }
          }
        }
      }
    },
    "aws_antivirus": {
      "description": "Standard Configuration options to define antivirus configuration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ControlledFolders": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "AllowedApps": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "Folders": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          }
        },
        "Exclusions": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "FilePaths": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "FileTypes": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "Folders": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          }
        },
        "Mode": {
          "default": "Active",
          "type": "string",
          "enum": [
            "Active",
            "Passive",
            "Disabled"
          ]
        }
      }
    },
    "containertask": {
      "description": "Descirbes each container that will be used as part of a service or task",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "MemoryReservation": {
          "type": "number"
        },
        "ContainerNetworkLinks": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "Privileged": {
          "default": false,
          "type": "boolean"
        },
        "MaximumMemory": {
          "description": "Set to 0 to not set a maximum",
          "type": "number"
        },
        "Cpu": {
          "description": "The CPU share to assign to the container",
          "type": "number"
        },
        "Ports": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Container": {
                  "type": "string"
                },
                "DynamicHostPort": {
                  "default": false,
                  "type": "boolean"
                },
                "LB": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/lbattach"
                },
                "Registry": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/srvregattach"
                },
                "IPAddressGroups": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "Extensions": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "Extensions to invoke as part of component processing",
          "type": "array"
        },
        "Image": {
          "description": "Set the source of the components image",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Source:containerregistry": {
              "description": "A docker container registry to source the image from",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Image": {
                  "description": "The docker image that you want to use",
                  "type": "string"
                }
              }
            },
            "Source": {
              "default": "Registry",
              "description": "The source of the image",
              "type": "string",
              "enum": [
                "registry",
                "containerregistry"
              ]
            }
          },
          "required": [
            "Source"
          ]
        },
        "Gpu": {
          "description": "The number of physical GPUs to assign to the container",
          "type": "number"
        },
        "LocalLogging": {
          "default": false,
          "type": "boolean"
        },
        "RunCapabilities": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "Version": {
          "description": "Override the version from the deployment unit",
          "type": "string"
        },
        "RunMode": {
          "description": "A per container setting which can be used by the app to determine run mode for a container in a task - defaults to the second half of a dash separated id",
          "type": "string"
        },
        "Profiles": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Alert": {
              "default": "default",
              "type": "string"
            }
          }
        },
        "Links": {
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
        },
        "LogDriver": {
          "default": "awslogs",
          "type": "string",
          "enum": [
            "awslogs",
            "json-file",
            "fluentd"
          ]
        },
        "Ulimits": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "SoftLimit": {
                  "default": 1024,
                  "description": "The User level limit to apply",
                  "type": "number"
                },
                "HardLimit": {
                  "default": 1024,
                  "description": "The OS level hard limit to apply",
                  "type": "number"
                },
                "Name": {
                  "description": "The name of the ulimit to apply",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ]
            }
          },
          "description": "Linux OS based limits for the container",
          "additionalProperties": false,
          "type": "object"
        },
        "InitProcess": {
          "default": false,
          "description": "Enable a docker based init process to manage processes",
          "type": "boolean"
        },
        "LogMetrics": {
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/logmetric"
        },
        "Alerts": {
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/alert"
        },
        "ContainerLogGroup": {
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "MemoryReservation"
      ]
    },
    "maintenancewindow": {
      "description": "Standard Configuration options to define a maintenance window",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "TimeOfDay": {
          "default": "01:00",
          "type": "string"
        },
        "DayOfTheWeek": {
          "default": "Sunday",
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "TimeZone": {
          "default": "UTC",
          "type": "string"
        }
      }
    },
    "scalingpolicy_ecs": {
      "description": "ECS Specific overrides for scaling policies",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Scheduled": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Schedule": {
              "type": "string"
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            },
            "ProcessorProfile": {
              "default": "default",
              "type": "string"
            }
          }
        },
        "Type": {
          "default": "ComputeProvider",
          "type": "string",
          "enum": [
            "Stepped",
            "Tracked",
            "Scheduled",
            "ComputeProvider"
          ]
        },
        "Tracked": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "TargetValue": {
              "type": "number"
            },
            "ScaleInEnabled": {
              "default": true,
              "type": "boolean"
            },
            "RecommendedMetric": {
              "description": "Use a recommended (predefined) metric for scaling",
              "type": "string"
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            }
          }
        },
        "TrackingResource": {
          "description": "The resource metric used to trigger scaling",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Link": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
            },
            "MetricTrigger": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/alert"
            }
          }
        },
        "Cooldown": {
          "description": "Cooldown time ( seconds ) after a scaling event has occurred before another event can be triggered",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ScaleIn": {
              "default": 300,
              "type": "number"
            },
            "ScaleOut": {
              "default": 600,
              "type": "number"
            }
          }
        },
        "Stepped": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "CapacityAdjustment": {
              "default": "Change",
              "description": "How to scale when the policy is triggered",
              "type": "string",
              "enum": [
                "Change",
                "Exact",
                "Percentage"
              ]
            },
            "MetricAggregation": {
              "default": "Average",
              "description": "The method used to agregate the cloudwatch metric",
              "type": "string",
              "enum": [
                "Average",
                "Minimum",
                "Maximum"
              ]
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            },
            "Adjustments": {
              "patternProperties": {
                "^[A-Za-z_][A-Za-z0-9_-]*$": {
                  "properties": {
                    "LowerBound": {
                      "description": "The lower bound for the difference between the alarm threshold and the metric",
                      "type": "number"
                    },
                    "AdjustmentValue": {
                      "default": 1,
                      "description": "The value to apply when the adjustment step is triggered",
                      "type": "number"
                    },
                    "UpperBound": {
                      "description": "The upper bound for the difference between the alarm threshold and the metric",
                      "type": "number"
                    }
                  }
                }
              },
              "description": "The adjustments to apply at each step",
              "additionalProperties": false,
              "type": "object"
            },
            "MinAdjustment": {
              "default": -1,
              "description": "When minimum scale adjustment value to apply when triggered",
              "type": "number"
            }
          }
        },
        "ComputeProvider": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ManageTermination": {
              "default": true,
              "description": "Alow the computer provider to manage when instances will be terminated",
              "type": "boolean"
            },
            "MaxAdjustment": {
              "default": 10000,
              "description": "The maximum instances to  update during scaling activities",
              "type": "number"
            },
            "MinAdjustment": {
              "default": 1,
              "description": "The minimum instances to update during scaling activities",
              "type": "number"
            },
            "TargetCapacity": {
              "default": 90,
              "description": "The target usage of the autoscale group to maintain as a percentage",
              "type": "number"
            }
          }
        }
      }
    },
    "srvregattach": {
      "description": "Attachs a component port to a service registry",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LinkName": {
          "default": "srvreg",
          "type": "string"
        },
        "SubComponent": {
          "type": "string"
        },
        "Type": {
          "default": "serviceregistryservice",
          "const": "serviceregistryservice",
          "type": "string"
        },
        "Tier": {
          "type": "string"
        },
        "Instance": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Component": {
          "type": "string"
        },
        "RegistryService": {
          "type": "string"
        }
      },
      "required": [
        "Tier",
        "Component"
      ]
    },
    "autoscalegroup": {
      "description": "Control how a virtual machine based autoscaling group behaves",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "MinUpdateInstances": {
          "default": 1,
          "description": "The minimum number of instances which must be available during an update",
          "type": "number"
        },
        "ReplaceCluster": {
          "default": false,
          "description": "When set to true a brand new cluster will be built, if false the instances in the current cluster will be replaced",
          "type": "boolean"
        },
        "DetailedMetrics": {
          "default": true,
          "description": "Enable the collection of autoscale group detailed metrics",
          "type": "boolean"
        },
        "UpdatePauseTime": {
          "default": "10M",
          "description": "How long to pause betweeen updates of instances",
          "type": "string"
        },
        "ActivityCooldown": {
          "default": 30,
          "type": "number"
        },
        "MinSuccessInstances": {
          "default": 75,
          "description": "The minimum percantage of instances that must sucessfully update",
          "type": "number"
        },
        "StartupTimeout": {
          "default": "15M",
          "description": "How long to wait for a cfn-signal to be received from a host",
          "type": "string"
        },
        "AlwaysReplaceOnUpdate": {
          "default": false,
          "description": "Replace instances on every update action",
          "type": "boolean"
        }
      }
    },
    "aws_ecs_computeimage": {
      "description": "AWS ECS Specific overrides to source compute images",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "aws:Source:SSMParam": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Name": {
              "default": "/aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "Source": {
          "default": "Reference",
          "description": "Where to source the image id from - Reference: uses the Regions AMIs reference property to find the image",
          "type": [
            "array",
            "boolean",
            "number",
            "object",
            "string"
          ],
          "enum": [
            "Reference",
            "aws:AMI",
            "aws:SSMParam"
          ]
        },
        "Source:Reference": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Type": {
              "default": "ECS",
              "description": "The image Type defined under the family in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            },
            "OS": {
              "default": "Centos",
              "description": "The OS Image family defined in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "aws:Source:AMI": {
          "description": "Use an explicit AMI for the image ",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ImageId": {
              "type": "string"
            }
          }
        }
      }
    },
    "ospatching": {
      "description": "OS Patching configuration definitions",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Schedule": {
          "default": "59 13 * * *",
          "description": "UTC based cron schedule to apply updates",
          "type": "string"
        },
        "Enabled": {
          "default": true,
          "description": "Enable automatic OS Patching",
          "type": "boolean"
        },
        "SecurityOnly": {
          "default": false,
          "description": "Only apply security updates",
          "type": "boolean"
        }
      }
    },
    "alert": {
      "description": "Configuration of alerts that monitor component resources",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Operator": {
          "default": "GreaterThanOrEqualToThreshold",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Resource": {
          "description": "Provide a component resource to determine the dimensions of the metric",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Type": {
              "type": "string"
            },
            "Id": {
              "type": "string"
            }
          }
        },
        "Dimensions": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Value": {
                  "description": "The value of the dimension to match",
                  "type": "string"
                },
                "SettingEnvName": {
                  "description": "A setting name as env that will provide the dimension value",
                  "type": "string"
                },
                "Key": {
                  "description": "The Key of the dimension",
                  "type": "string"
                }
              }
            }
          },
          "description": "Explicit configured dimensions",
          "additionalProperties": false,
          "type": "object"
        },
        "Severity": {
          "default": "info",
          "type": "string",
          "enum": [
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ]
        },
        "Time": {
          "default": 300,
          "type": "number"
        },
        "Unit": {
          "default": "Count",
          "type": "string"
        },
        "MissingData": {
          "default": "notBreaching",
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Periods": {
          "default": 1,
          "type": "number"
        },
        "Statistic": {
          "default": "Sum",
          "type": "string"
        },
        "Comparison": {
          "default": "Threshold",
          "type": "string"
        },
        "ReportOk": {
          "default": false,
          "type": "boolean"
        },
        "DimensionSource": {
          "default": "Resource",
          "description": "The source of the alert dimensions - resource lookup or explicit configuration",
          "type": "string",
          "enum": [
            "Resource",
            "Configured"
          ]
        },
        "Metric": {
          "type": "string"
        },
        "Threshold": {
          "default": 1,
          "type": "number"
        }
      },
      "required": [
        "Metric",
        "Name"
      ]
    },
    "logmetric": {
      "description": "Generates a monitoring metric whenever the filter is matched in a log message",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LogFilter": {
          "description": "A filter expression to apply to logs that will trigger a metric bump",
          "type": "string"
        }
      },
      "required": [
        "LogFilter"
      ]
    },
    "waf": {
      "description": "The Web Application Firewall Policy to apply",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Logging": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Enabled": {
              "default": true,
              "type": "boolean"
            }
          }
        },
        "Version": {
          "default": "v1",
          "description": "Version of WAF to use",
          "type": "string",
          "enum": [
            "v1",
            "v2"
          ]
        },
        "RateLimits": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "IPAddressGroups": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "Limit": {
                  "type": "number"
                }
              },
              "required": [
                "Limit"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "OWASP": {
          "default": false,
          "type": "boolean"
        },
        "Profiles": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Logging": {
              "default": "waf",
              "description": "Logging profile to process WAF Logs that are stored in the OpsData DataBucket.",
              "type": "string"
            }
          }
        },
        "CountryGroups": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "IPAddressGroups": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        }
      }
    },
    "environmentformat": {
      "description": "How to format environment variables from settings",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Json": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Prefix": {
              "default": "json",
              "type": "string",
              "enum": [
                "json",
                ""
              ]
            },
            "Escaped": {
              "default": true,
              "type": "boolean"
            }
          }
        },
        "FileFormat": {
          "default": "json",
          "description": "The format of the file when using AsFile",
          "type": "string",
          "enum": [
            "json",
            "yaml"
          ]
        },
        "AsFile": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "placementprofile": {
      "description": "Manages where resource groups in a component are placed",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "*": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "DeploymentFramework": {
              "description": "The deployment framework to use to generate the outputs for deployment",
              "type": "string"
            },
            "Region": {
              "description": "The id of the region to host the component",
              "type": "string"
            },
            "Provider": {
              "description": "The provider to use to host the component",
              "type": "string"
            }
          },
          "required": [
            "Provider",
            "Region",
            "DeploymentFramework"
          ]
        }
      }
    },
    "aws_computeimage": {
      "description": "AWS Specific overrides to source compute images",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "aws:Source:SSMParam": {
          "description": "Lookup the image Id using the SSM ParameterStore",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Name": {
              "default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-ebs",
              "description": "The name of the parameter to lookup",
              "type": "string"
            }
          }
        },
        "Source": {
          "default": "Reference",
          "description": "Where to source the image id from - Reference: uses the Regions AMIs reference property to find the image",
          "type": [
            "array",
            "boolean",
            "number",
            "object",
            "string"
          ],
          "enum": [
            "Reference",
            "aws:AMI",
            "aws:SSMParam"
          ]
        },
        "Source:Reference": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Type": {
              "default": "EC2",
              "description": "The image Type defined under the family in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            },
            "OS": {
              "default": "Centos",
              "description": "The OS Image family defined in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "aws:Source:AMI": {
          "description": "Use an explicit AMI for the image ",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ImageId": {
              "type": "string"
            }
          }
        }
      }
    },
    "tracing": {
      "description": "Application tracing configuration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Mode": {
          "type": "string",
          "enum": [
            "active",
            "passthrough"
          ]
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ecs_computeimage": {
      "description": "ECS Specific overrides to source compute images",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Source": {
          "default": "Reference",
          "const": "Reference",
          "description": "Where to source the image id from - Reference: uses the Regions AMIs reference property to find the image",
          "type": [
            "array",
            "boolean",
            "number",
            "object",
            "string"
          ]
        },
        "Source:Reference": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Type": {
              "default": "ECS",
              "description": "The image Type defined under the family in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            },
            "OS": {
              "default": "Centos",
              "description": "The OS Image family defined in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            }
          }
        }
      }
    },
    "logwatcher": {
      "description": "Configuration for services which can act on log subscriptions",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Links": {
          "description": "Links to the components with logs to watch",
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
        },
        "LogFilter": {
          "description": "A filter expression to apply to logs that will be sent to the watcher",
          "type": "string"
        }
      },
      "required": [
        "LogFilter"
      ]
    },
    "computeimage": {
      "description": "Configuration for the source of compute instance images",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Source": {
          "default": "Reference",
          "const": "Reference",
          "description": "Where to source the image id from - Reference: uses the Regions AMIs reference property to find the image",
          "type": [
            "array",
            "boolean",
            "number",
            "object",
            "string"
          ]
        },
        "Source:Reference": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Type": {
              "default": "EC2",
              "description": "The image Type defined under the family in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            },
            "OS": {
              "default": "Centos",
              "description": "The OS Image family defined in the Region AMI",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            }
          }
        }
      }
    },
    "core_profile": {
      "description": "Internal: desribes the base profiles for all components",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Profiles": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Policy": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "description": "A list of enforced deployment profiles which override component configuraiton",
              "type": "array"
            },
            "Placement": {
              "default": "default",
              "description": "The resource group assignment placement for resources in the component",
              "type": "string"
            },
            "Deployment": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "description": "A list of deployment profiles to apply to this component",
              "type": "array"
            },
            "Baseline": {
              "default": "default",
              "description": "The profile used to lookup standard services provided by the segment baseline",
              "type": "string"
            },
            "Testing": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "description": "The testing profiles to apply to the component",
              "type": "array"
            }
          }
        }
      }
    },
    "module": {
      "description": "Defines the CMDB modules to load",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Parameters": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Value": {
                  "description": "The value of the parameter",
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "Key": {
                  "description": "The key of the parameter",
                  "type": "string"
                }
              },
              "required": [
                "Key",
                "Value"
              ]
            }
          },
          "description": "The parameter values to provide to the module",
          "additionalProperties": false,
          "type": "object"
        },
        "Enabled": {
          "default": true,
          "description": "To enable loading the module in this profile",
          "type": "boolean"
        },
        "Provider": {
          "description": "The provider name which offers the module",
          "type": "string"
        },
        "Name": {
          "description": "The name of the scneario to load",
          "type": "string"
        }
      },
      "required": [
        "Provider",
        "Name"
      ]
    },
    "secretstring": {
      "description": "Defines the policy for generating secret strings",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ExcludedCharacters": {
          "default": [
            "\"",
            "'",
            "$",
            "@",
            "/",
            "\\"
          ],
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "Characters that must be excluded",
          "type": "array"
        },
        "RequireAllIncludedTypes": {
          "default": true,
          "description": "Require at least one of each included type",
          "type": "boolean"
        },
        "MinLength": {
          "default": 20,
          "description": "The minimum character length",
          "type": "number"
        },
        "MaxLength": {
          "default": 30,
          "description": "The maximum character length",
          "type": "number"
        },
        "IncludeUpper": {
          "default": true,
          "description": "Include upper-case characters",
          "type": "boolean"
        },
        "IncludeLower": {
          "default": true,
          "description": "Include lower-case characters",
          "type": "boolean"
        },
        "IncludeSpecial": {
          "default": false,
          "description": "Include special characters",
          "type": "boolean"
        },
        "IncludeNumber": {
          "default": true,
          "description": "Include numbers characters",
          "type": "boolean"
        }
      }
    },
    "aws_operatingsystem": {
      "description": "Standard Configuration options to define an operating system",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "MajorVersion": {
          "default": "1",
          "description": "The major version of the distribution",
          "type": "string"
        },
        "Architecture": {
          "description": "The CPU Architecture used",
          "type": "string",
          "enum": [
            "i386",
            "x86_64",
            "arm64"
          ]
        },
        "Distribution": {
          "default": "awslinux",
          "description": "The distribution of the operating system",
          "type": "string"
        },
        "Family": {
          "default": "linux",
          "description": "The broad family of operating system",
          "type": "string",
          "enum": [
            "linux",
            "windows",
            "macos"
          ]
        },
        "MinorVersion": {
          "description": "The minor version of the distribution major version",
          "type": "string"
        }
      }
    },
    "scalingpolicy": {
      "description": "Defines the behaviour of auto scaling resources",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Scheduled": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Schedule": {
              "type": "string"
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            },
            "ProcessorProfile": {
              "default": "default",
              "type": "string"
            }
          }
        },
        "Type": {
          "default": "Stepped",
          "type": "string",
          "enum": [
            "Stepped",
            "Tracked",
            "Scheduled"
          ]
        },
        "Tracked": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "TargetValue": {
              "type": "number"
            },
            "ScaleInEnabled": {
              "default": true,
              "type": "boolean"
            },
            "RecommendedMetric": {
              "description": "Use a recommended (predefined) metric for scaling",
              "type": "string"
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            }
          }
        },
        "TrackingResource": {
          "description": "The resource metric used to trigger scaling",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Link": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
            },
            "MetricTrigger": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/alert"
            }
          }
        },
        "Cooldown": {
          "description": "Cooldown time ( seconds ) after a scaling event has occurred before another event can be triggered",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ScaleIn": {
              "default": 300,
              "type": "number"
            },
            "ScaleOut": {
              "default": 600,
              "type": "number"
            }
          }
        },
        "Stepped": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "CapacityAdjustment": {
              "default": "Change",
              "description": "How to scale when the policy is triggered",
              "type": "string",
              "enum": [
                "Change",
                "Exact",
                "Percentage"
              ]
            },
            "MetricAggregation": {
              "default": "Average",
              "description": "The method used to agregate the cloudwatch metric",
              "type": "string",
              "enum": [
                "Average",
                "Minimum",
                "Maximum"
              ]
            },
            "Enabled": {
              "default": true,
              "type": "boolean"
            },
            "Adjustments": {
              "patternProperties": {
                "^[A-Za-z_][A-Za-z0-9_-]*$": {
                  "properties": {
                    "LowerBound": {
                      "description": "The lower bound for the difference between the alarm threshold and the metric",
                      "type": "number"
                    },
                    "AdjustmentValue": {
                      "default": 1,
                      "description": "The value to apply when the adjustment step is triggered",
                      "type": "number"
                    },
                    "UpperBound": {
                      "description": "The upper bound for the difference between the alarm threshold and the metric",
                      "type": "number"
                    }
                  }
                }
              },
              "description": "The adjustments to apply at each step",
              "additionalProperties": false,
              "type": "object"
            },
            "MinAdjustment": {
              "default": -1,
              "description": "When minimum scale adjustment value to apply when triggered",
              "type": "number"
            }
          }
        }
      }
    },
    "volume": {
      "description": "Defines the standard configuration of a storage volume",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "MountPath": {
          "description": "An OS path where the disk will be mounted",
          "type": "string"
        },
        "Type": {
          "default": "gp2",
          "description": "The type of volume to provision - see provider for available types",
          "type": "string"
        },
        "Device": {
          "description": "The deivce Id of the volume where the disk will be attached",
          "type": "string"
        },
        "Size": {
          "description": "The size in GB of the volume",
          "type": "number"
        },
        "Enabled": {
          "default": true,
          "description": "Should the volume be created",
          "type": "boolean"
        },
        "Iops": {
          "description": "For volume types which support provisioned IOPS, this sets the requested IOPS",
          "type": "number"
        }
      },
      "required": [
        "Device",
        "Size"
      ]
    },
    "objectstore_notification": {
      "description": "Event notification for object changes in an object store",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Suffix": {
          "type": "string"
        },
        "Events": {
          "default": [
            "create"
          ],
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array",
          "enum": [
            "create",
            "delete",
            "restore",
            "reducedredundancy"
          ]
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "Links": {
          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
        },
        "Prefix": {
          "type": "string"
        }
      }
    },
    "plugin": {
      "description": "Defines a CMDB plugin and how its loaded",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Required": {
          "default": false,
          "description": "Ensure the plugin loads at all times",
          "type": "boolean"
        },
        "Source:git": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Path": {
              "description": "a path within in the repository where the plugin starts",
              "type": "string"
            },
            "Ref": {
              "default": "main",
              "description": "The ref to clone from the repo",
              "type": "string"
            },
            "Url": {
              "description": "The Url for the git repository",
              "type": "string"
            }
          }
        },
        "Priority": {
          "default": 100,
          "description": "The priority order to load plugins - lowest first",
          "type": "number"
        },
        "Enabled": {
          "default": true,
          "description": "To enable loading the plugin",
          "type": "boolean"
        },
        "Source": {
          "description": "Where the plugin for the plugin can be found",
          "type": "string",
          "enum": [
            "local",
            "git"
          ]
        },
        "Name": {
          "description": "The id of the plugin to install",
          "type": "string"
        }
      },
      "required": [
        "Name",
        "Source"
      ]
    },
    "lbattach": {
      "description": "Attaches a components port to a load balancer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LinkName": {
          "default": "lb",
          "type": "string"
        },
        "SubComponent": {
          "type": "string"
        },
        "Type": {
          "default": "lbport",
          "const": "lbport",
          "type": "string"
        },
        "Tier": {
          "type": "string"
        },
        "Instance": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "PortMapping": {
          "type": "string"
        },
        "Component": {
          "type": "string"
        },
        "LinkRef": {
          "type": "string"
        }
      }
    },
    "contextpath": {
      "description": "Combined with the getContextPath() function creates a name or path based on your current context",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Order": {
          "default": [
            "Account",
            "ProviderId",
            "Product",
            "Solution",
            "Environment",
            "Segment",
            "Tier",
            "Component",
            "Instance",
            "Version",
            "Host",
            "Custom"
          ],
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "IncludeInPath": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "ProviderId": {
              "default": false,
              "description": "The Provider Id for the account",
              "type": "boolean"
            },
            "Account": {
              "default": false,
              "description": "The name of the Account",
              "type": "boolean"
            },
            "Tier": {
              "default": false,
              "description": "The name of the tier",
              "type": "boolean"
            },
            "Instance": {
              "default": false,
              "description": "The name of the instance",
              "type": "boolean"
            },
            "Version": {
              "default": false,
              "description": "The name of the version",
              "type": "boolean"
            },
            "Product": {
              "default": true,
              "description": "The name of the product",
              "type": "boolean"
            },
            "Environment": {
              "default": false,
              "description": "The name of the environment",
              "type": "boolean"
            },
            "Custom": {
              "default": false,
              "description": "Include a custom string",
              "type": "boolean"
            },
            "Component": {
              "default": false,
              "description": "The name of the component",
              "type": "boolean"
            },
            "Solution": {
              "default": false,
              "description": "The name of the solution",
              "type": "boolean"
            },
            "Segment": {
              "default": true,
              "description": "The name of the segment",
              "type": "boolean"
            }
          }
        },
        "Style": {
          "default": "single",
          "description": "Provide the value as a single string or a file system style path",
          "type": "string",
          "enum": [
            "single",
            "path"
          ]
        },
        "Custom": {
          "description": "The custom string to include if custom is included in the path",
          "type": "string"
        }
      }
    }
  },
  "$id": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json"
}
