{
  "$id": "https://docs.hamlet.io/schema/latest/Reference-schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "AlertProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Rules": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AlertRule": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Destinations": {
          "additionalProperties": false,
          "properties": {
            "Links": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
            }
          },
          "type": "object"
        },
        "Severity": {
          "enum": [
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "type": "string"
        }
      },
      "required": [
        "Severity"
      ],
      "type": "object"
    },
    "BaselineProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "AppData": {
          "type": "string"
        },
        "CDNOriginKey": {
          "type": "string"
        },
        "Encryption": {
          "type": "string"
        },
        "OpsData": {
          "type": "string"
        },
        "SSHKey": {
          "type": "string"
        }
      },
      "required": [
        "OpsData",
        "AppData",
        "Encryption",
        "SSHKey",
        "CDNOriginKey"
      ],
      "type": "object"
    },
    "Bootstrap": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "AutoUpgradeOnMinorVersion": {
          "default": false,
          "type": "boolean"
        },
        "Index": {
          "description": "Determines script execution sequence.",
          "type": "number"
        },
        "InitScript": {
          "type": "string"
        },
        "Packages": {
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Version": {
                  "type": "string"
                }
              }
            }
          },
          "type": "object"
        },
        "Prefix": {
          "type": "string"
        },
        "ProtectedSettings": {
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Key": {
                  "type": "string"
                },
                "Value": {
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                }
              },
              "required": [
                "Key",
                "Value"
              ]
            }
          },
          "type": "object"
        },
        "Publisher": {
          "type": "string"
        },
        "ScriptStore": {
          "type": "string"
        },
        "Settings": {
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Key": {
                  "type": "string"
                },
                "Value": {
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                }
              },
              "required": [
                "Key",
                "Value"
              ]
            }
          },
          "type": "object"
        },
        "Type": {
          "additionalProperties": false,
          "properties": {
            "HandlerVersion": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BootstrapProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "bastion": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "Bootstraps": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "computecluster": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "Bootstraps": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "ec2": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "Bootstraps": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "ecs": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "Bootstraps": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CORSProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "AllowedHeaders": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "AllowedMethods": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "AllowedOrigins": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "ExposedHeaders": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "MaxAge": {
          "type": "number"
        }
      },
      "required": [
        "AllowedOrigins",
        "AllowedMethods",
        "AllowedHeaders",
        "ExposedHeaders",
        "MaxAge"
      ],
      "type": "object"
    },
    "Category": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Certificate": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Domain": {
          "description": "The Id of a domain reference to map to a product",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertificateBehaviour": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "External": {
          "type": "boolean"
        },
        "HostParts": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "IncludeInHost": {
          "additionalProperties": false,
          "properties": {
            "Product": {
              "type": "boolean"
            },
            "Segment": {
              "type": "boolean"
            },
            "Tier": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Wildcard": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ComputeProvider": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Containers": {
          "additionalProperties": false,
          "description": "Compute policy for container based resources",
          "properties": {
            "Additional": {
              "additionalProperties": false,
              "description": "Providers who will meet the additional compute capacity outside of the default",
              "patternProperties": {
                "^[A-Za-z_][A-Za-z0-9_-]*$": {
                  "properties": {
                    "Provider": {
                      "enum": [
                        "_autoscalegroup",
                        "aws:fargate",
                        "aws:fargatespot"
                      ],
                      "type": "string"
                    },
                    "Weight": {
                      "default": 1,
                      "description": "The ratio of containers allocated to the provider based on the configured providers",
                      "type": "number"
                    }
                  },
                  "required": [
                    "Provider"
                  ]
                }
              },
              "type": "object"
            },
            "Default": {
              "additionalProperties": false,
              "description": "Sets the default computer provider which will meet base capacity",
              "properties": {
                "Provider": {
                  "default": "_autoscalegroup",
                  "description": "The default container compute provider",
                  "enum": [
                    "_autoscalegroup",
                    "aws:fargate",
                    "aws:fargatespot"
                  ],
                  "type": "string"
                },
                "RequiredCount": {
                  "default": 1,
                  "description": "The minimum count of containers to run on the default provider",
                  "type": "number"
                },
                "Weight": {
                  "default": 1,
                  "description": "The ratio of containers allocated to the provider based on the configured providers",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Blacklist": {
          "type": "boolean"
        },
        "Locations": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeploymentGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "CompositeTemplate": {
          "description": "A composite template file to include for this group",
          "type": "string"
        },
        "DistrictType": {
          "default": "*",
          "description": "The DistrictType to include as part of the Deployment Group",
          "type": "string"
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "Level": {
          "description": "The deployment level to use for template generation",
          "enum": [
            "",
            "account",
            "segment",
            "solution",
            "application"
          ],
          "type": "string"
        },
        "OutputPrefix": {
          "description": "Overrides the prefix used when generating outputs - Defaults to the Id of the Group",
          "type": "string"
        },
        "Priority": {
          "default": 100,
          "description": "The priority this group has in deployment mode processing",
          "type": "number"
        },
        "ResourceSets": {
          "additionalProperties": false,
          "description": "Generate deployments based on resource labels across all units in the group",
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "GroupDeploymentUnit": {
                  "default": true,
                  "description": "Does the resource set span all units in the group",
                  "type": "boolean"
                },
                "ResourceLabels": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "The resource labels to include in the subset",
                  "type": "array"
                },
                "deployment:Priority": {
                  "default": 5,
                  "description": "The Deployment Priority",
                  "type": "number"
                },
                "deployment:Unit": {
                  "description": "The Deployment Unit",
                  "type": "string"
                }
              },
              "required": [
                "deployment:Unit"
              ]
            }
          },
          "type": "object"
        }
      },
      "required": [
        "Level"
      ],
      "type": "object"
    },
    "DeploymentMode": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "ExecutionPolicy": {
          "default": "Optional",
          "description": "Defines how groups can be used in this deployment mode",
          "enum": [
            "Required",
            "Optional"
          ],
          "type": "string"
        },
        "Explicit": {
          "additionalProperties": false,
          "description": "Controls for explicit membership",
          "properties": {
            "Groups": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "description": "A list of group ids in their deployment order",
              "type": "array"
            }
          },
          "type": "object"
        },
        "Membership": {
          "description": "How deployment groups are included in the mode and their ordering",
          "enum": [
            "explicit",
            "priority",
            "orphaned"
          ],
          "type": "string"
        },
        "Operations": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "default": [
            "update"
          ],
          "description": "The deployment operations to complete for each deployment",
          "enum": [
            "create",
            "update",
            "delete"
          ],
          "type": "array"
        },
        "Priority": {
          "additionalProperties": false,
          "description": "Controls for priority membership",
          "properties": {
            "GroupFilter": {
              "default": ".*",
              "description": "A regex filter to apply on group ids to include in the mode",
              "type": "string"
            },
            "Order": {
              "default": "LowestFirst",
              "description": "How to evalute the priority ordering",
              "enum": [
                "HighestFirst",
                "LowestFirst"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "Membership"
      ],
      "type": "object"
    },
    "DeploymentProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Modes": {
          "description": "A nested object with the deployment mode name as the root and childs based on component types",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Domain": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Bare": {
          "default": false,
          "description": "Use the name value of the domain as the full domain name value",
          "type": "boolean"
        },
        "Name": {
          "description": "The name of the domain",
          "type": "string"
        },
        "Parents": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "description": "The parent of this domain segment",
          "type": "array"
        },
        "Role": {
          "enum": [
            "primary",
            "secondary"
          ],
          "type": "string"
        },
        "Stem": {
          "description": "The root stem domain name that children will be based on",
          "type": "string"
        },
        "Zone": {
          "description": "The zone the endpoint belongs to",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IPAddressGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "CIDR": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "Description": {
          "type": "string"
        },
        "IsOpen": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LogFile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "FilePath": {
          "type": "string"
        },
        "MultiLinePattern": {
          "type": "string"
        },
        "TimeFormat": {
          "type": "string"
        }
      },
      "required": [
        "FilePath"
      ],
      "type": "object"
    },
    "LogFileGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "LogFiles": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        },
        "LogStore": {
          "additionalProperties": false,
          "properties": {
            "Destination": {
              "default": "component",
              "description": "The type of logstore to use for this log file group - component is local and link is an external store",
              "enum": [
                "component",
                "link"
              ],
              "type": "string"
            },
            "Link": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link",
              "description": "A link to an external log store"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "LogFiles"
      ],
      "type": "object"
    },
    "LogFileProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "bastion": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "LogFileGroups": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "computecluster": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "LogFileGroups": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "ec2": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "LogFileGroups": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "ecs": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "LogFileGroups": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LogFilter": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Pattern": {
          "type": "string"
        }
      },
      "required": [
        "Pattern"
      ],
      "type": "object"
    },
    "LoggingProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Encryption": {
          "additionalProperties": false,
          "description": "Mange encryption of log storage",
          "properties": {
            "Enabled": {
              "default": false,
              "description": "Enable at rest encryption",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ForwardingRules": {
          "additionalProperties": false,
          "description": "Controls the forwarding of logs after they have landed in their initial logging location",
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Filter": {
                  "description": "The name of a Logfilter to apply to the forwarding rule",
                  "type": "string"
                },
                "Links": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link",
                  "description": "The links of components which will accept fowarded logs"
                }
              },
              "required": [
                "Filter"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NetworkEndpointGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Services": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        }
      },
      "required": [
        "Services"
      ],
      "type": "object"
    },
    "NetworkProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "BaseSecurityGroup": {
          "additionalProperties": false,
          "properties": {
            "Links": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link",
              "description": "Apply network security rules based on links"
            },
            "Outbound": {
              "additionalProperties": false,
              "description": "Outbound security group rules",
              "properties": {
                "GlobalAllow": {
                  "default": true,
                  "description": "Allow all outbound traffic",
                  "type": "boolean"
                },
                "NetworkRules": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/networkrule"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PlacementProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "*": {
          "additionalProperties": false,
          "properties": {
            "DeploymentFramework": {
              "description": "The deployment framework to use to generate the outputs for deployment",
              "type": "string"
            },
            "Provider": {
              "description": "The provider to use to host the component",
              "type": "string"
            },
            "Region": {
              "description": "The id of the region to host the component",
              "type": "string"
            }
          },
          "required": [
            "Provider",
            "Region",
            "DeploymentFramework"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Modes": {
          "description": "A nested object with the deployment mode name as the root and childs based on component types",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Port": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Certificate": {
          "default": false,
          "type": "boolean"
        },
        "HealthCheck": {
          "additionalProperties": false,
          "properties": {
            "Enabled": {
              "default": true,
              "description": "Will the health check be run",
              "type": "boolean"
            },
            "HealthyThreshold": {
              "type": [
                "number",
                "string"
              ]
            },
            "Interval": {
              "type": [
                "number",
                "string"
              ]
            },
            "Path": {
              "type": "string"
            },
            "Protocol": {
              "default": "_protocol",
              "description": "The protocol used for healthchecks. _protocol uses the ports protocol",
              "enum": [
                "_protocol",
                "TCP",
                "UDP",
                "HTTP",
                "HTTPS"
              ],
              "type": "string"
            },
            "SuccessCodes": {
              "type": "string"
            },
            "Timeout": {
              "type": [
                "number",
                "string"
              ]
            },
            "UnhealthyThreshold": {
              "type": [
                "number",
                "string"
              ]
            }
          },
          "type": "object"
        },
        "ICMP": {
          "additionalProperties": false,
          "properties": {
            "Code": {
              "type": "number"
            },
            "Type": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "IPProtocol": {
          "enum": [
            "tcp",
            "udp",
            "icmp",
            "any",
            "all"
          ],
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "PortRange": {
          "additionalProperties": false,
          "properties": {
            "Enabled": {
              "default": true,
              "type": "boolean"
            },
            "From": {
              "type": "number"
            },
            "To": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "Protocol": {
          "enum": [
            "TCP",
            "UDP",
            "HTTP",
            "HTTPS",
            "SSL"
          ],
          "type": "string"
        }
      },
      "required": [
        "IPProtocol"
      ],
      "type": "object"
    },
    "PortMapping": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Destination": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        }
      },
      "required": [
        "Source",
        "Destination"
      ],
      "type": "object"
    },
    "Processor": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "bastion": {
          "additionalProperties": false,
          "properties": {
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "cache": {
          "additionalProperties": false,
          "properties": {
            "CountPerZone": {
              "default": 1,
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "computecluster": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "containerhost": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "containerservice": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "db": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "docdb": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ec2": {
          "additionalProperties": false,
          "properties": {
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ecs": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "emr": {
          "additionalProperties": false,
          "properties": {
            "DesiredCorePerZone": {
              "default": 1,
              "type": "number"
            },
            "DesiredTaskPerZone": {
              "default": 1,
              "type": "number"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "es": {
          "additionalProperties": false,
          "properties": {
            "CountPerZone": {
              "default": 1,
              "type": "number"
            },
            "Master": {
              "additionalProperties": false,
              "properties": {
                "Count": {
                  "default": 0,
                  "type": "number"
                },
                "Processor": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "nat": {
          "additionalProperties": false,
          "properties": {
            "Processor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "properties": {
            "DesiredCount": {
              "type": "number"
            },
            "DesiredPerZone": {
              "type": "number"
            },
            "MaxCount": {
              "type": "number"
            },
            "MaxPerZone": {
              "type": "number"
            },
            "MinCount": {
              "type": "number"
            },
            "MinPerZone": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Region": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "AMIs": {
          "type": "object"
        },
        "Accounts": {
          "type": "object"
        },
        "Description": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "Locality": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Partition": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Zones": {
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "AWSZone": {
                  "type": "string"
                },
                "Description": {
                  "type": "string"
                },
                "NetworkEndpoints": {
                  "contains": {
                    "type": [
                      "object"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "type": "object"
        }
      },
      "required": [
        "Locality"
      ],
      "type": "object"
    },
    "SecurityProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "IPSecVPN": {
          "additionalProperties": false,
          "properties": {
            "DeadPeerDetectionAction": {
              "enum": [
                "clear",
                "none",
                "restart"
              ],
              "type": "string"
            },
            "DeadPeerDetectionTimeout": {
              "type": "number"
            },
            "IKEVersions": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "Phase1": {
              "additionalProperties": false,
              "properties": {
                "DiffeHellmanGroups": {
                  "contains": {
                    "type": [
                      "number"
                    ]
                  },
                  "type": "array"
                },
                "EncryptionAlgorithms": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "IntegrityAlgorithms": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "Lifetime": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "Phase2": {
              "additionalProperties": false,
              "properties": {
                "DiffeHellmanGroups": {
                  "contains": {
                    "type": [
                      "number"
                    ]
                  },
                  "type": "array"
                },
                "EncryptionAlgorithms": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "IntegrityAlgorithms": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "Lifetime": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "Rekey": {
              "additionalProperties": false,
              "properties": {
                "FuzzPercentage": {
                  "type": "number"
                },
                "MarginTime": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "ReplayWindowSize": {
              "type": "number"
            },
            "StartupAction": {
              "description": "Initiation behaviour for vpn",
              "enum": [
                "add",
                "start"
              ],
              "type": "string"
            },
            "TunnelInsideCidr": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "apigateway": {
          "additionalProperties": false,
          "properties": {
            "CDNHTTPSProfile": {
              "type": "string"
            },
            "GatewayHTTPSProfile": {
              "default": "TLS_1_0",
              "type": "string"
            },
            "ProtocolPolicy": {
              "type": "string"
            },
            "WAFProfile": {
              "type": "string"
            },
            "WAFValueSet": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "cdn": {
          "additionalProperties": false,
          "properties": {
            "HTTPSProfile": {
              "type": "string"
            },
            "WAFProfile": {
              "type": "string"
            },
            "WAFValueSet": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "db": {
          "additionalProperties": false,
          "properties": {
            "SSLCertificateAuthority": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "es": {
          "additionalProperties": false,
          "properties": {
            "ProtocolPolicy": {
              "enum": [
                "https-only",
                "http-https",
                "http-only"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "filetransfer": {
          "additionalProperties": false,
          "properties": {
            "EncryptionPolicy": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "lb": {
          "additionalProperties": false,
          "properties": {
            "application": {
              "additionalProperties": false,
              "properties": {
                "HTTPSProfile": {
                  "type": "string"
                },
                "WAFProfile": {
                  "type": "string"
                },
                "WAFValueSet": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "classic": {
              "additionalProperties": false,
              "properties": {
                "HTTPSProfile": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "network": {
              "additionalProperties": false,
              "properties": {
                "HTTPSProfile": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ServiceRole": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Description": {
          "description": "A description to include as part of the Role",
          "type": "string"
        },
        "Enabled": {
          "default": true,
          "type": "boolean"
        },
        "ServiceName": {
          "description": "The Service domain name for the service you want to create the role for",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SkuProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "apigateway": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "type": "number"
            },
            "Name": {
              "enum": [
                "Developer",
                "Standard",
                "Premium",
                "Basic",
                "Consumption"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "bastion": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "type": "number"
            },
            "Name": {
              "type": "string"
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "computecluster": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "default": 1,
              "type": "number"
            },
            "Name": {
              "type": "string"
            },
            "Tier": {
              "enum": [
                "Standard",
                "Basic"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "containerhost": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "type": "number"
            },
            "Family": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Size": {
              "type": [
                "number",
                "string"
              ]
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "db": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "type": "number"
            },
            "Family": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Size": {
              "type": [
                "number",
                "string"
              ]
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "directory": {
          "additionalProperties": false,
          "properties": {
            "Name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "gateway": {
          "additionalProperties": false,
          "properties": {
            "Generation": {
              "description": "The Virtual Network Gateway Generation",
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "lb": {
          "additionalProperties": false,
          "properties": {
            "Capacity": {
              "type": "number"
            },
            "Name": {
              "type": "string"
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "network": {
          "additionalProperties": false,
          "properties": {
            "Name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "s3": {
          "additionalProperties": false,
          "properties": {
            "Kind": {
              "type": "string"
            },
            "Replication": {
              "type": "string"
            },
            "Tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secretstore": {
          "additionalProperties": false,
          "properties": {
            "Family": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Storage": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "bastion": {
          "additionalProperties": false,
          "properties": {
            "Volumes": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
            }
          },
          "type": "object"
        },
        "computecluster": {
          "additionalProperties": false,
          "properties": {
            "Replication": {
              "description": "The type of storage replication to use",
              "type": "string"
            },
            "Tier": {
              "description": "The storage tier to use for all volumes",
              "type": "string"
            },
            "Volumes": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
            }
          },
          "type": "object"
        },
        "ec2": {
          "additionalProperties": false,
          "properties": {
            "Volumes": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
            }
          },
          "type": "object"
        },
        "ecs": {
          "additionalProperties": false,
          "properties": {
            "Volumes": {
              "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
            }
          },
          "type": "object"
        },
        "es": {
          "additionalProperties": false,
          "properties": {
            "Volumes": {
              "additionalProperties": false,
              "properties": {
                "data": {
                  "additionalProperties": false,
                  "description": "A fixed volume to use for ES Data storage",
                  "properties": {
                    "Enabled": {
                      "default": true,
                      "description": "Should the volume be created",
                      "type": "boolean"
                    },
                    "Iops": {
                      "description": "For volume types which support provisioned IOPS, this sets the requested IOPS",
                      "type": "number"
                    },
                    "Size": {
                      "description": "The size in GB of the volume",
                      "type": "number"
                    },
                    "Type": {
                      "default": "gp2",
                      "description": "The type of volume to provision - see provider for available types",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Size"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "storageAccount": {
          "additionalProperties": false,
          "description": "Azure Storage Account configuration",
          "properties": {
            "AccessTier": {
              "type": "string"
            },
            "HnsEnabled": {
              "type": "boolean"
            },
            "Replication": {
              "type": "string"
            },
            "Tier": {
              "type": "string"
            },
            "Type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TestCase": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "OutputSuffix": {
          "enum": [
            "contract.json",
            "template.json",
            "config.json",
            "cli.json",
            "parameters.json",
            "prologue.sh",
            "epilogue.sh"
          ],
          "type": "string"
        },
        "Structural": {
          "additionalProperties": false,
          "properties": {
            "CFN": {
              "additionalProperties": false,
              "description": "Cloud formation Template structure",
              "properties": {
                "Output": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "Does an output with exist",
                  "type": "array"
                },
                "Resource": {
                  "additionalProperties": false,
                  "description": "Does a resource with the type exist",
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Name": {
                          "type": "string"
                        },
                        "Type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Name",
                        "Type"
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "JSON": {
              "additionalProperties": false,
              "description": "Generic JSON level structure tests",
              "properties": {
                "Exists": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "Does a JSON path exist",
                  "type": "array"
                },
                "Length": {
                  "additionalProperties": false,
                  "description": "Length of an Array at a given JSON path",
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Count": {
                          "type": "number"
                        },
                        "Path": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                "Match": {
                  "additionalProperties": false,
                  "description": "Does a JSON path match a value",
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Path": {
                          "type": "string"
                        },
                        "Value": {
                          "type": [
                            "array",
                            "boolean",
                            "number",
                            "object",
                            "string"
                          ]
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                "NotEmpty": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "Is the value of a JSON path not emtpy",
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "Tools": {
          "additionalProperties": false,
          "description": "Tool based tests - linters etc",
          "properties": {
            "cfn-lint": {
              "additionalProperties": false,
              "description": "Run cfn-lint on the file - https://github.com/aws-cloudformation/cfn-lint",
              "properties": {
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "IgnoreChecks": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "A list of checks to ignore in cfn-lint",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "checkov": {
              "additionalProperties": false,
              "description": "Run checkov on the file - https://github.com/bridgecrewio/checkov",
              "properties": {
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "Framework": {
                  "default": "cloudformation",
                  "description": "The framework of the file to run testing against",
                  "enum": [
                    "cloudformation",
                    "arm"
                  ],
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "SkipChecks": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "A list of checks to skip in checkov",
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TestProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "*": {
          "additionalProperties": false,
          "description": "The component type the profile applies to",
          "properties": {
            "TestCases": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VMImageProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "*": {
          "additionalProperties": false,
          "description": "The component type that the VMImage configuration belongs to.",
          "properties": {
            "Image": {
              "type": "string"
            },
            "LicenseType": {
              "type": "string"
            },
            "Offering": {
              "type": "string"
            },
            "Publisher": {
              "type": "string"
            }
          },
          "required": [
            "Publisher",
            "Offering",
            "Image"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "WAFCondition": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Filters": {
          "additionalProperties": false,
          "properties": {
            "Constraints": {
              "enum": [
                "CONTAINS",
                "CONTAINS_WORD",
                "EXACTLY",
                "STARTS_WITH",
                "ENDS_WITH"
              ],
              "type": "string"
            },
            "FieldsToMatch": {
              "additionalProperties": false,
              "properties": {
                "Data": {
                  "type": "string"
                },
                "Type": {
                  "enum": [
                    "HEADER",
                    "METHOD",
                    "QUERY_STRING",
                    "URI",
                    "BODY",
                    "SINGLE_QUERY_ARG",
                    "ALL_QUERY_ARGS"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "Operators": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "enum": [
                "EQ",
                "NE",
                "LE",
                "LT",
                "GE",
                "GT"
              ],
              "type": "array"
            },
            "Sizes": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "Targets": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "type": "array"
            },
            "Transformations": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "enum": [
                "NONE",
                "CMD_LINE",
                "COMPRESS_WHITE_SPACE",
                "HTML_ENTITY_DECODE",
                "LOWERCASE",
                "URL_DECODE"
              ],
              "type": "array"
            }
          },
          "type": "object"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WAFProfile": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "DefaultAction": {
          "enum": [
            "ALLOW",
            "BLOCK"
          ],
          "type": "string"
        },
        "Rules": {
          "contains": {
            "type": [
              "object"
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WAFRule": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "Conditions": {
          "additionalProperties": false,
          "description": "User defined WAF conditions which will be used to either enforce the rule or scope it",
          "properties": {
            "Condition": {
              "description": "The name of the WAFCondition reference object to use",
              "type": "string"
            },
            "Negated": {
              "default": false,
              "description": "Should the result of the rule be negated",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Engine": {
          "default": "Conditional",
          "description": "The engine of the rule that will be used to evaluate the traffic",
          "enum": [
            "Conditional",
            "RateLimit",
            "VendorManaged"
          ],
          "type": "string"
        },
        "Engine:RateLimit": {
          "additionalProperties": false,
          "description": "Measures request rate based on client IP and applies an action when it hits the rate limit",
          "properties": {
            "IPAddressSource": {
              "default": "ClientIP",
              "description": "The source of the IP address to apply rate limiting to - Client IP: TCP connection address, HTTPHeader: use a header with the IP listed",
              "enum": [
                "ClientIP",
                "HTTPHeader"
              ],
              "type": "string"
            },
            "IPAddressSource:HTTPHeader": {
              "additionalProperties": false,
              "description": "HTTP Header Specific IP Address Source Config",
              "properties": {
                "ApplyLimitWhenMissing": {
                  "default": false,
                  "description": "When the header is missing apply the rate limit",
                  "type": "boolean"
                },
                "HeaderName": {
                  "default": "X-Forwarded-For",
                  "description": "The name of the HTTP header to get the client IP from",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "Limit": {
              "description": "The limit to activate the rule in, measured in requests / 5 mins",
              "type": "number"
            }
          },
          "type": "object"
        },
        "Engine:VendorManaged": {
          "additionalProperties": false,
          "description": "Use a Vendor managed rule to apply dynamic controls",
          "properties": {
            "DisabledRules": {
              "contains": {
                "type": [
                  "string"
                ]
              },
              "description": "A list of rules within the managed rule which should be disabled",
              "type": "array"
            },
            "Parameters": {
              "description": "Rule specific parameters used to apply additional configuration",
              "type": [
                "array",
                "boolean",
                "number",
                "object",
                "string"
              ]
            },
            "RuleName": {
              "description": "The name of the rule to use",
              "type": "string"
            },
            "RuleVersion": {
              "description": "The version of the rule to use",
              "type": "string"
            },
            "Vendor": {
              "description": "The name of the vendor the managed rule belongs to",
              "type": "string"
            }
          },
          "type": "object"
        },
        "NameSuffix": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WAFRuleGroup": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "WAFRules": {
          "contains": {
            "type": [
              "string"
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WAFValueSet": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "*": {
          "type": [
            "array",
            "boolean",
            "number",
            "object",
            "string"
          ]
        }
      },
      "type": "object"
    }
  }
}
