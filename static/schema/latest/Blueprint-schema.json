{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "Bootstraps": {
      "description": "User defined initialisation for virtual machine based components",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Bootstraps": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Type": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "HandlerVersion": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "ScriptStore": {
                  "type": "string"
                },
                "AutoUpgradeOnMinorVersion": {
                  "default": false,
                  "type": "boolean"
                },
                "ProtectedSettings": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Value": {
                          "type": [
                            "array",
                            "boolean",
                            "number",
                            "object",
                            "string"
                          ]
                        },
                        "Key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Key",
                        "Value"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "Packages": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Version": {
                          "type": "string"
                        },
                        "Name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "InitScript": {
                  "type": "string"
                },
                "Index": {
                  "description": "Determines script execution sequence.",
                  "type": "number"
                },
                "Prefix": {
                  "type": "string"
                },
                "Publisher": {
                  "type": "string"
                },
                "Settings": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Value": {
                          "type": [
                            "array",
                            "boolean",
                            "number",
                            "object",
                            "string"
                          ]
                        },
                        "Key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Key",
                        "Value"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Products": {
      "description": "A product layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Products": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "SES": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Region": {
                      "type": "string"
                    }
                  }
                },
                "Builds": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Data": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Environment": {
                          "type": "string"
                        }
                      }
                    },
                    "Code": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Environment": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "DeploymentProfiles": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Modes": {
                          "description": "A nested object with the deployment mode name as the root and childs based on component types",
                          "type": "object"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "Modules": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/module"
                },
                "PolicyProfiles": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Modes": {
                          "description": "A nested object with the deployment mode name as the root and childs based on component types",
                          "type": "object"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "*": {
                  "description": "Individual deployment-unit configuration overrides. Attribute must match the DeploymentUnit value.",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Region": {
                      "description": "An override of the Region for a single DeploymentUnit.",
                      "type": "string"
                    }
                  }
                },
                "CertificateBehaviours": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Wildcard": {
                      "type": "boolean"
                    },
                    "IncludeInHost": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Tier": {
                          "type": "boolean"
                        },
                        "Instance": {
                          "type": "boolean"
                        },
                        "Version": {
                          "type": "boolean"
                        },
                        "Product": {
                          "type": "boolean"
                        },
                        "Environment": {
                          "type": "boolean"
                        },
                        "Host": {
                          "type": "boolean"
                        },
                        "Component": {
                          "type": "boolean"
                        },
                        "Segment": {
                          "type": "boolean"
                        }
                      }
                    },
                    "External": {
                      "type": "boolean"
                    },
                    "Host": {
                      "type": "string"
                    },
                    "Domain": {
                      "type": "string"
                    },
                    "IncludeInDomain": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Product": {
                          "type": "boolean"
                        },
                        "Environment": {
                          "type": "boolean"
                        },
                        "Segment": {
                          "type": "boolean"
                        }
                      }
                    },
                    "HostParts": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "PlacementProfiles": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/placementprofile"
                },
                "Profiles": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Policy": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Placement": {
                      "type": "string"
                    },
                    "Deployment": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Region": {
                  "type": "string"
                },
                "Domain": {
                  "type": "string"
                },
                "LinkRefs": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                },
                "Plugins": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/plugin"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "AlertProfiles": {
      "description": "A collection of alert rules applied to a component",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "AlertProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Rules": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "SecurityProfiles": {
      "description": "Security Configuration Options",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SecurityProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "apigateway": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "WAFProfile": {
                      "type": "string"
                    },
                    "GatewayHTTPSProfile": {
                      "default": "TLS_1_0",
                      "type": "string"
                    },
                    "CDNHTTPSProfile": {
                      "type": "string"
                    },
                    "WAFValueSet": {
                      "type": "string"
                    },
                    "ProtocolPolicy": {
                      "type": "string"
                    }
                  }
                },
                "IPSecVPN": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "StartupAction": {
                      "description": "Initiation behaviour for vpn",
                      "type": "string",
                      "enum": [
                        "add",
                        "start"
                      ]
                    },
                    "TunnelInsideCidr": {
                      "type": "string"
                    },
                    "IKEVersions": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "DeadPeerDetectionAction": {
                      "type": "string",
                      "enum": [
                        "clear",
                        "none",
                        "restart"
                      ]
                    },
                    "Phase2": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Lifetime": {
                          "type": "number"
                        },
                        "EncryptionAlgorithms": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        },
                        "IntegrityAlgorithms": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        },
                        "DiffeHellmanGroups": {
                          "contains": {
                            "type": [
                              "number"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    },
                    "DeadPeerDetectionTimeout": {
                      "type": "number"
                    },
                    "Phase1": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Lifetime": {
                          "type": "number"
                        },
                        "EncryptionAlgorithms": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        },
                        "IntegrityAlgorithms": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        },
                        "DiffeHellmanGroups": {
                          "contains": {
                            "type": [
                              "number"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    },
                    "ReplayWindowSize": {
                      "type": "number"
                    },
                    "Rekey": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "MarginTime": {
                          "type": "number"
                        },
                        "FuzzPercentage": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "lb": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "classic": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "HTTPSProfile": {
                          "type": "string"
                        }
                      }
                    },
                    "application": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "WAFProfile": {
                          "type": "string"
                        },
                        "HTTPSProfile": {
                          "type": "string"
                        },
                        "WAFValueSet": {
                          "type": "string"
                        }
                      }
                    },
                    "network": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "HTTPSProfile": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "cdn": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "WAFProfile": {
                      "type": "string"
                    },
                    "HTTPSProfile": {
                      "type": "string"
                    },
                    "WAFValueSet": {
                      "type": "string"
                    }
                  }
                },
                "db": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "SSLCertificateAuthority": {
                      "type": "string"
                    }
                  }
                },
                "es": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "ProtocolPolicy": {
                      "type": "string",
                      "enum": [
                        "https-only",
                        "http-https",
                        "http-only"
                      ]
                    }
                  }
                },
                "filetransfer": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "EncryptionPolicy": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "NetworkEndpointGroups": {
      "description": "A group of network endpoints",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "NetworkEndpointGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Services": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              },
              "required": [
                "Services"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Certificates": {
      "description": "Mapping of a domain to a product certificate entry - the Id of the reference should be a product Id",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Certificates": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Domain": {
                  "description": "The Id of a domain reference to map to a product",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "CountryGroups": {
      "description": "A collection of Country Codes used for access control",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CountryGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Locations": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "Blacklist": {
                  "type": "boolean"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "LogFiles": {
      "description": "A log file and its collection pattern",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LogFiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "FilePath": {
                  "type": "string"
                },
                "TimeFormat": {
                  "type": "string"
                },
                "MultiLinePattern": {
                  "type": "string"
                }
              },
              "required": [
                "FilePath"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Segments": {
      "description": "A segment layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Segments": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "NAT": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Hosted": {
                      "default": false,
                      "type": "boolean"
                    },
                    "Enabled": {
                      "default": true,
                      "type": "boolean"
                    },
                    "MultiAZ": {
                      "default": false,
                      "type": "boolean"
                    }
                  }
                },
                "RDS": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "AutoMinorVersionUpgrade": {
                      "default": true,
                      "type": "boolean"
                    }
                  }
                },
                "S3": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "IncludeTenant": {
                      "default": false,
                      "type": "boolean"
                    }
                  }
                },
                "Tiers": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Order": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Description": {
                  "type": "string"
                },
                "Category": {
                  "type": "string"
                },
                "Bastion": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Active": {
                      "default": false,
                      "type": "boolean"
                    },
                    "Enabled": {
                      "default": true,
                      "type": "boolean"
                    },
                    "IPAddressGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Modules": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/module"
                },
                "Title": {
                  "type": "string"
                },
                "Data": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Expiration": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Offline": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Public": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        },
                        "IPAddressGroups": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "IPAddressGroups": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "Name": {
                  "type": "string"
                },
                "RotateKeys": {
                  "default": true,
                  "type": "boolean"
                },
                "Profiles": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Policy": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Deployment": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Network": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tiers": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Order": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    },
                    "InternetAccess": {
                      "default": true,
                      "type": "boolean"
                    },
                    "CIDR": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Address": {
                          "type": "string"
                        },
                        "Mask": {
                          "default": 0,
                          "type": "number"
                        },
                        "Enabled": {
                          "default": true,
                          "type": "boolean"
                        }
                      }
                    },
                    "DNSHostnames": {
                      "type": "boolean"
                    },
                    "DNSSupport": {
                      "type": "boolean"
                    },
                    "Zones": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Order": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "Region": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "Operations": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "FlowLogs": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Expiration": {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        "Enabled": {
                          "default": false,
                          "description": "Deprecated - here to override automatically added enabled attribute",
                          "type": "boolean"
                        }
                      }
                    },
                    "Expiration": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Offline": {
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  }
                },
                "Plugins": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/plugin"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Tenants": {
      "description": "A tenant layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Tenants": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Description": {
                  "type": "string"
                },
                "DeploymentProfiles": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Modes": {
                          "description": "A nested object with the deployment mode name as the root and childs based on component types",
                          "type": "object"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "Modules": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/module"
                },
                "PolicyProfiles": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Modes": {
                          "description": "A nested object with the deployment mode name as the root and childs based on component types",
                          "type": "object"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "Title": {
                  "type": "string"
                },
                "CertificateBehaviours": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Wildcard": {
                      "type": "boolean"
                    },
                    "IncludeInHost": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Tier": {
                          "type": "boolean"
                        },
                        "Instance": {
                          "type": "boolean"
                        },
                        "Version": {
                          "type": "boolean"
                        },
                        "Product": {
                          "type": "boolean"
                        },
                        "Environment": {
                          "type": "boolean"
                        },
                        "Host": {
                          "type": "boolean"
                        },
                        "Component": {
                          "type": "boolean"
                        },
                        "Segment": {
                          "type": "boolean"
                        }
                      }
                    },
                    "External": {
                      "type": "boolean"
                    },
                    "Host": {
                      "type": "string"
                    },
                    "Domain": {
                      "type": "string"
                    },
                    "IncludeInDomain": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Product": {
                          "type": "boolean"
                        },
                        "Environment": {
                          "type": "boolean"
                        },
                        "Segment": {
                          "type": "boolean"
                        }
                      }
                    },
                    "HostParts": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "PlacementProfiles": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/placementprofile"
                },
                "Name": {
                  "type": "string"
                },
                "Profiles": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Policy": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Placement": {
                      "type": "string"
                    },
                    "Deployment": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Region": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "LinkRefs": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                },
                "Plugins": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/plugin"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "LoggingProfiles": {
      "description": "A profile to describe logging rules for a component",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LoggingProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Encryption": {
                  "description": "Mange encryption of log storage",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "default": false,
                      "description": "Enable at rest encryption",
                      "type": "boolean"
                    }
                  }
                },
                "ForwardingRules": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Filter": {
                          "description": "The name of a Logfilter to apply to the forwarding rule",
                          "type": "string"
                        },
                        "Links": {
                          "description": "The links of components which will accept fowarded logs",
                          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                        }
                      },
                      "required": [
                        "Filter"
                      ]
                    }
                  },
                  "description": "Controls the forwarding of logs after they have landed in their initial logging location",
                  "additionalProperties": false,
                  "type": "object"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "IPAddressGroups": {
      "description": "A collection of CIDR based IP Addresses used for access control",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "IPAddressGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Description": {
                  "type": "string"
                },
                "CIDR": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "IsOpen": {
                  "type": "boolean"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "PlacementProfiles": {
      "description": "Determines where a component will be deployed to",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "PlacementProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "*": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "DeploymentFramework": {
                      "description": "The deployment framework to use to generate the outputs for deployment",
                      "type": "string"
                    },
                    "Region": {
                      "description": "The id of the region to host the component",
                      "type": "string"
                    },
                    "Provider": {
                      "description": "The provider to use to host the component",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Provider",
                    "Region",
                    "DeploymentFramework"
                  ]
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "VMImageProfiles": {
      "description": "A virtual machine operating system configuration",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "VMImageProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "*": {
                  "description": "The component type that the VMImage configuration belongs to.",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Publisher": {
                      "type": "string"
                    },
                    "Image": {
                      "type": "string"
                    },
                    "Offering": {
                      "type": "string"
                    },
                    "LicenseType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "Publisher",
                    "Offering",
                    "Image"
                  ]
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "BaselineProfiles": {
      "description": "The baseline components to use for a given baseilne function",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "BaselineProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "SSHKey": {
                  "type": "string"
                },
                "CDNOriginKey": {
                  "type": "string"
                },
                "AppData": {
                  "type": "string"
                },
                "Encryption": {
                  "type": "string"
                },
                "OpsData": {
                  "type": "string"
                }
              },
              "required": [
                "OpsData",
                "AppData",
                "Encryption",
                "SSHKey",
                "CDNOriginKey"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "CORSProfiles": {
      "description": "Cross Origin Resource Sharing Policy",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CORSProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ExposedHeaders": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "AllowedOrigins": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "AllowedMethods": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "AllowedHeaders": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                },
                "MaxAge": {
                  "type": "number"
                }
              },
              "required": [
                "AllowedOrigins",
                "AllowedMethods",
                "AllowedHeaders",
                "ExposedHeaders",
                "MaxAge"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Solutions": {
      "description": "The solution layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Solutions": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "RDS": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "AutoMinorVersionUpgrade": {
                      "type": "boolean"
                    }
                  }
                },
                "Description": {
                  "type": "string"
                },
                "Modules": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/module"
                },
                "Title": {
                  "type": "string"
                },
                "Region": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "LinkRefs": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                },
                "MultiAZ": {
                  "type": "boolean"
                },
                "Name": {
                  "type": "string"
                },
                "Plugins": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/plugin"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "AlertRules": {
      "description": "A alert filtering rule to forward alerts based on their severity",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "AlertRules": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Destinations": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Links": {
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                    }
                  }
                },
                "Severity": {
                  "type": "string",
                  "enum": [
                    "debug",
                    "info",
                    "warn",
                    "error",
                    "fatal"
                  ]
                }
              },
              "required": [
                "Severity"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "WAFConditions": {
      "description": "Web Application Firewall Condition",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WAFConditions": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Type": {
                  "type": "string"
                },
                "Filters": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Sizes": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Operators": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array",
                      "enum": [
                        "EQ",
                        "NE",
                        "LE",
                        "LT",
                        "GE",
                        "GT"
                      ]
                    },
                    "Constraints": {
                      "type": "string",
                      "enum": [
                        "CONTAINS",
                        "CONTAINS_WORD",
                        "EXACTLY",
                        "STARTS_WITH",
                        "ENDS_WITH"
                      ]
                    },
                    "FieldsToMatch": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Type": {
                          "type": "string",
                          "enum": [
                            "HEADER",
                            "METHOD",
                            "QUERY_STRING",
                            "URI",
                            "BODY",
                            "SINGLE_QUERY_ARG",
                            "ALL_QUERY_ARGS"
                          ]
                        },
                        "Data": {
                          "type": "string"
                        }
                      }
                    },
                    "Targets": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Transformations": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array",
                      "enum": [
                        "NONE",
                        "CMD_LINE",
                        "COMPRESS_WHITE_SPACE",
                        "HTML_ENTITY_DECODE",
                        "LOWERCASE",
                        "URL_DECODE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "WAFValueSets": {
      "description": "Web Application Firewall Rule",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WAFValueSets": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "*": {
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "BootstrapProfiles": {
      "description": "A collection of boostraps to apply",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "BootstrapProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ecs": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Bootstraps": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "ec2": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Bootstraps": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "computecluster": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Bootstraps": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "bastion": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Bootstraps": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "TestProfiles": {
      "description": "A collection of test cases",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "TestProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "*": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "TestCases": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "ComputeProviders": {
      "description": "Policies to determine the compute services used to host a given resource",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ComputeProviders": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Containers": {
                  "description": "Compute policy for container based resources",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Additional": {
                      "patternProperties": {
                        "^[A-Za-z_][A-Za-z0-9_-]*$": {
                          "properties": {
                            "Weight": {
                              "default": 1,
                              "description": "The ratio of containers allocated to the provider based on the configured providers",
                              "type": "number"
                            },
                            "Provider": {
                              "type": "string",
                              "enum": [
                                "_autoscalegroup",
                                "aws:fargate",
                                "aws:fargatespot"
                              ]
                            }
                          },
                          "required": [
                            "Provider"
                          ]
                        }
                      },
                      "description": "Providers who will meet the additional compute capacity outside of the default",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "Default": {
                      "description": "Sets the default computer provider which will meet base capacity",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "RequiredCount": {
                          "default": 1,
                          "description": "The minimum count of containers to run on the default provider",
                          "type": "number"
                        },
                        "Weight": {
                          "default": 1,
                          "description": "The ratio of containers allocated to the provider based on the configured providers",
                          "type": "number"
                        },
                        "Provider": {
                          "default": "_autoscalegroup",
                          "description": "The default container compute provider",
                          "type": "string",
                          "enum": [
                            "_autoscalegroup",
                            "aws:fargate",
                            "aws:fargatespot"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "DeploymentGroups": {
      "description": "A collection of deployment units and their relationships",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DeploymentGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "DistrictType": {
                  "description": "The DistrictType to include as part of the Deployment Group",
                  "type": "string"
                },
                "Priority": {
                  "default": 100,
                  "description": "The priority this group has in deployment mode processing",
                  "type": "number"
                },
                "OutputPrefix": {
                  "description": "Overrides the prefix used when generating outputs - Defaults to the Id of the Group",
                  "type": "string"
                },
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "Level": {
                  "description": "The deployment level to use for template generation",
                  "type": "string",
                  "enum": [
                    "",
                    "account",
                    "segment",
                    "solution",
                    "application"
                  ]
                },
                "ResourceSets": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "ResourceLabels": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "The resource labels to include in the subset",
                          "type": "array"
                        },
                        "deployment:Unit": {
                          "description": "The Deployment Unit",
                          "type": "string"
                        },
                        "GroupDeploymentUnit": {
                          "default": true,
                          "description": "Does the resource set span all units in the group",
                          "type": "boolean"
                        },
                        "deployment:Priority": {
                          "default": 5,
                          "description": "The Deployment Priority",
                          "type": "number"
                        },
                        "Enabled": {
                          "default": true,
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "deployment:Unit"
                      ]
                    }
                  },
                  "description": "Generate deployments based on resource labels across all units in the group",
                  "additionalProperties": false,
                  "type": "object"
                },
                "CompositeTemplate": {
                  "description": "A composite template file to include for this group",
                  "type": "string"
                }
              },
              "required": [
                "Level",
                "DistrictType"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "ServiceRoles": {
      "description": "Security Roles assigned to cloud services",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ServiceRoles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Description": {
                  "description": "A description to include as part of the Role",
                  "type": "string"
                },
                "ServiceName": {
                  "description": "The Service domain name for the service you want to create the role for",
                  "type": "string"
                },
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "ScriptStores": {
      "description": "A physical location for infrastructure deployment",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ScriptStores": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Destination": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Prefix": {
                      "type": "string"
                    }
                  }
                },
                "Engine": {
                  "type": "string",
                  "enum": [
                    "local",
                    "github"
                  ]
                },
                "Source": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Repository": {
                      "type": "string"
                    },
                    "Branch": {
                      "type": "string"
                    },
                    "Directory": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "WAFRuleGroups": {
      "description": "Web Application Firewall Rule",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WAFRuleGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "WAFRules": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Categories": {
      "description": "A high level grouping of environments",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Categories": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Description": {
                  "type": "string"
                },
                "Title": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "DeploymentProfiles": {
      "description": "Creates a collection of configuration which can be applied to multiple components",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DeploymentProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Modes": {
                  "description": "A nested object with the deployment mode name as the root and childs based on component types",
                  "type": "object"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "PolicyProfiles": {
      "description": "Creates a collection of configuration which can be applied to multiple components",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "PolicyProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Modes": {
                  "description": "A nested object with the deployment mode name as the root and childs based on component types",
                  "type": "object"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Ports": {
      "description": "An IP based network port",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Ports": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "PortRange": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "default": true,
                      "type": "boolean"
                    },
                    "From": {
                      "type": "number"
                    },
                    "To": {
                      "type": "number"
                    }
                  }
                },
                "IPProtocol": {
                  "type": "string",
                  "enum": [
                    "tcp",
                    "udp",
                    "icmp",
                    "any",
                    "all"
                  ]
                },
                "Port": {
                  "type": "number"
                },
                "HealthCheck": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Path": {
                      "type": "string"
                    },
                    "SuccessCodes": {
                      "type": "string"
                    },
                    "UnhealthyThreshold": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Timeout": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "HealthyThreshold": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Interval": {
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  }
                },
                "Protocol": {
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP",
                    "HTTP",
                    "HTTPS",
                    "SSL"
                  ]
                },
                "ICMP": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Type": {
                      "type": "number"
                    },
                    "Code": {
                      "type": "number"
                    }
                  }
                },
                "Certificate": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "required": [
                "IPProtocol"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Regions": {
      "description": "A physical location for infrastructure deployment",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Regions": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Partition": {
                  "type": "string"
                },
                "Description": {
                  "type": "string"
                },
                "Locality": {
                  "type": "string"
                },
                "AMIs": {
                  "type": "object"
                },
                "Title": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "Accounts": {
                  "type": "object"
                },
                "Name": {
                  "type": "string"
                },
                "Zones": {
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_-]*$": {
                      "properties": {
                        "Description": {
                          "type": "string"
                        },
                        "NetworkEndpoints": {
                          "contains": {
                            "type": [
                              "object"
                            ]
                          },
                          "type": "array"
                        },
                        "AWSZone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                }
              },
              "required": [
                "Locality"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "CertificateBehaviours": {
      "description": "How to format the hostname used in a certificate",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CertificateBehaviours": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Wildcard": {
                  "type": "boolean"
                },
                "IncludeInHost": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "boolean"
                    },
                    "Product": {
                      "type": "boolean"
                    },
                    "Segment": {
                      "type": "boolean"
                    }
                  }
                },
                "External": {
                  "type": "boolean"
                },
                "HostParts": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "LogFilters": {
      "description": "A filter to apply when searching log files",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LogFilters": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Pattern": {
                  "type": "string"
                }
              },
              "required": [
                "Pattern"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Environments": {
      "description": "The environment layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Environments": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "RDS": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "AutoMinorVersionUpgrade": {
                      "default": true,
                      "type": "boolean"
                    }
                  }
                },
                "Description": {
                  "type": "string"
                },
                "Category": {
                  "type": "string"
                },
                "Title": {
                  "type": "string"
                },
                "Data": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Expiration": {
                      "type": "number"
                    },
                    "Offline": {
                      "type": "number"
                    },
                    "Public": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        },
                        "IPAddressGroups": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "Name": {
                  "type": "string"
                },
                "DomainBehaviours": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Segment": {
                      "type": "string"
                    }
                  }
                },
                "FlowLogs": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Expiration": {
                      "default": 7,
                      "type": "number"
                    },
                    "Enabled": {
                      "default": false,
                      "description": "Deprecated - here to override automatically added enabled attribute",
                      "type": "boolean"
                    }
                  }
                },
                "OSPatching": {
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/ospatching"
                },
                "Profiles": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Policy": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    },
                    "Deployment": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Region": {
                  "type": "string"
                },
                "Id": {
                  "type": "string"
                },
                "MultiAZ": {
                  "default": false,
                  "type": "boolean"
                },
                "Operations": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "DeadLetterQueue": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "MaxReceives": {
                          "default": 3,
                          "type": "number"
                        },
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        }
                      }
                    },
                    "FlowLogs": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Expiration": {
                          "type": "number"
                        },
                        "Enabled": {
                          "type": "boolean"
                        }
                      }
                    },
                    "Expiration": {
                      "default": 7,
                      "type": "number"
                    },
                    "Offline": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Domains": {
      "description": "Represents a segment of a domain name",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Domains": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Role": {
                  "type": "string",
                  "enum": [
                    "primary",
                    "secondary"
                  ]
                },
                "Zone": {
                  "description": "The zone the endpoint belongs to",
                  "type": "string"
                },
                "Parents": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "The parent of this domain segment",
                  "type": "array"
                },
                "Bare": {
                  "default": false,
                  "description": "Use the name value of the domain as the full domain name value",
                  "type": "boolean"
                },
                "Stem": {
                  "description": "The root stem domain name that children will be based on",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the domain",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "PortMappings": {
      "description": "A mapping between two ports when dealing with translation or offload services",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "PortMappings": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Destination": {
                  "type": "string"
                },
                "Source": {
                  "type": "string"
                }
              },
              "required": [
                "Source",
                "Destination"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Storage": {
      "description": "Storage configuration for components",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Storage": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ecs": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Volumes": {
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
                    }
                  }
                },
                "ec2": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Volumes": {
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
                    }
                  }
                },
                "computecluster": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Volumes": {
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
                    },
                    "Tier": {
                      "description": "The storage tier to use for all volumes",
                      "type": "string"
                    },
                    "Replication": {
                      "description": "The type of storage replication to use",
                      "type": "string"
                    }
                  }
                },
                "bastion": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Volumes": {
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/volume"
                    }
                  }
                },
                "storageAccount": {
                  "description": "Azure Storage Account configuration",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Type": {
                      "type": "string"
                    },
                    "Tier": {
                      "type": "string"
                    },
                    "AccessTier": {
                      "type": "string"
                    },
                    "Replication": {
                      "type": "string"
                    },
                    "HnsEnabled": {
                      "type": "boolean"
                    }
                  }
                },
                "es": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Volumes": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "A fixed volume to use for ES Data storage",
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Type": {
                              "default": "gp2",
                              "description": "The type of volume to provision - see provider for available types",
                              "type": "string"
                            },
                            "Size": {
                              "description": "The size in GB of the volume",
                              "type": "number"
                            },
                            "Enabled": {
                              "default": true,
                              "description": "Should the volume be created",
                              "type": "boolean"
                            },
                            "Iops": {
                              "description": "For volume types which support provisioned IOPS, this sets the requested IOPS",
                              "type": "number"
                            }
                          },
                          "required": [
                            "Size"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "WAFRules": {
      "description": "Web Application Firewall Rule",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WAFRules": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "NameSuffix": {
                  "type": "string"
                },
                "Conditions": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Condition": {
                      "type": "string"
                    },
                    "Negated": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "LogFileProfiles": {
      "description": "A collectio of log file groups based on component type",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LogFileProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ecs": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "LogFileGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "ec2": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "LogFileGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "computecluster": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "LogFileGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "bastion": {
                  "description": "The component type the profile applies to",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "LogFileGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "TestCases": {
      "description": "An output test case",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "TestCases": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "Structural": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "JSON": {
                      "description": "Generic JSON level structure tests",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Length": {
                          "patternProperties": {
                            "^[A-Za-z_][A-Za-z0-9_-]*$": {
                              "properties": {
                                "Path": {
                                  "type": "string"
                                },
                                "Count": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "description": "Length of an Array at a given JSON path",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "Exists": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "Does a JSON path exist",
                          "type": "array"
                        },
                        "NotEmpty": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "Is the value of a JSON path not emtpy",
                          "type": "array"
                        },
                        "Match": {
                          "patternProperties": {
                            "^[A-Za-z_][A-Za-z0-9_-]*$": {
                              "properties": {
                                "Path": {
                                  "type": "string"
                                },
                                "Value": {
                                  "type": [
                                    "array",
                                    "boolean",
                                    "number",
                                    "object",
                                    "string"
                                  ]
                                }
                              }
                            }
                          },
                          "description": "Does a JSON path match a value",
                          "additionalProperties": false,
                          "type": "object"
                        }
                      }
                    },
                    "CFN": {
                      "description": "Cloud formation Template structure",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Output": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "Does an output with exist",
                          "type": "array"
                        },
                        "Resource": {
                          "patternProperties": {
                            "^[A-Za-z_][A-Za-z0-9_-]*$": {
                              "properties": {
                                "Type": {
                                  "type": "string"
                                },
                                "Name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "Name",
                                "Type"
                              ]
                            }
                          },
                          "description": "Does a resource with the type exist",
                          "additionalProperties": false,
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "Tools": {
                  "description": "Tool based tests - linters etc",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "checkov": {
                      "description": "Run checkov on the file - https://github.com/bridgecrewio/checkov",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "SkipChecks": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "A list of checks to skip in checkov",
                          "type": "array"
                        },
                        "Enabled": {
                          "default": true,
                          "type": "boolean"
                        },
                        "Framework": {
                          "default": "cloudformation",
                          "description": "The framework of the file to run testing against",
                          "type": [
                            "array",
                            "boolean",
                            "number",
                            "object",
                            "string"
                          ],
                          "enum": [
                            "cloudformation",
                            "arm"
                          ]
                        }
                      }
                    },
                    "cfn-lint": {
                      "description": "Run cfn-lint on the file - https://github.com/aws-cloudformation/cfn-lint",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "IgnoreChecks": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "A list of checks to ignore in cfn-lint",
                          "type": "array"
                        },
                        "Enabled": {
                          "default": true,
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "OutputSuffix": {
                  "type": "string",
                  "enum": [
                    "contract.json",
                    "template.json",
                    "config.json",
                    "cli.json",
                    "parameters.json",
                    "prologue.sh",
                    "epilogue.sh"
                  ]
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "WAFProfiles": {
      "description": "Web Application Firewall Profile",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WAFProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "DefaultAction": {
                  "type": "string",
                  "enum": [
                    "ALLOW",
                    "BLOCK"
                  ]
                },
                "Rules": {
                  "contains": {
                    "type": [
                      "object"
                    ]
                  },
                  "type": "array"
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "LogFileGroups": {
      "description": "A group of log files",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LogFileGroups": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "LogFiles": {
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "type": "array"
                }
              },
              "required": [
                "LogFiles"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "NetworkProfiles": {
      "description": "A profile to desribe network level controls",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "NetworkProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "BaseSecurityGroup": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Outbound": {
                      "description": "Outbound security group rules",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "GlobalAllow": {
                          "default": true,
                          "description": "Allow all outbound traffic",
                          "type": "boolean"
                        },
                        "NetworkRules": {
                          "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/networkrule"
                        }
                      }
                    },
                    "Links": {
                      "description": "Apply network security rules based on links",
                      "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/link"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "SkuProfiles": {
      "description": "Compute SKU model and hardware type.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SkuProfiles": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "apigateway": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Capacity": {
                      "type": "number"
                    },
                    "Name": {
                      "type": "string",
                      "enum": [
                        "Developer",
                        "Standard",
                        "Premium",
                        "Basic",
                        "Consumption"
                      ]
                    }
                  }
                },
                "s3": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string"
                    },
                    "Kind": {
                      "type": "string"
                    },
                    "Replication": {
                      "type": "string"
                    }
                  }
                },
                "secretstore": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Family": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "lb": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string"
                    },
                    "Capacity": {
                      "type": "number"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "computecluster": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Basic"
                      ]
                    },
                    "Capacity": {
                      "default": 1,
                      "type": "number"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "bastion": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string"
                    },
                    "Capacity": {
                      "type": "number"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "directory": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "db": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string"
                    },
                    "Capacity": {
                      "type": "number"
                    },
                    "Size": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Family": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "gateway": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Generation": {
                      "description": "The Virtual Network Gateway Generation",
                      "type": "string"
                    },
                    "Tier": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "containerhost": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Tier": {
                      "type": "string"
                    },
                    "Capacity": {
                      "type": "number"
                    },
                    "Size": {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Family": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    }
                  }
                },
                "network": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "DeploymentModes": {
      "description": "A collection of deployment groups which are executed in a defined order",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DeploymentModes": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ExecutionPolicy": {
                  "default": "Optional",
                  "description": "Defines how groups can be used in this deployment mode",
                  "type": "string",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "Priority": {
                  "description": "Controls for priority membership",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Order": {
                      "default": "LowestFirst",
                      "description": "How to evalute the priority ordering",
                      "type": "string",
                      "enum": [
                        "HighestFirst",
                        "LowestFirst"
                      ]
                    },
                    "GroupFilter": {
                      "default": ".*",
                      "description": "A regex filter to apply on group ids to include in the mode",
                      "type": "string"
                    }
                  }
                },
                "Enabled": {
                  "default": true,
                  "type": "boolean"
                },
                "Membership": {
                  "description": "How deployment groups are included in the mode and their ordering",
                  "type": "string",
                  "enum": [
                    "explicit",
                    "priority",
                    "orphaned"
                  ]
                },
                "Explicit": {
                  "description": "Controls for explicit membership",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Groups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "description": "A list of group ids in their deployment order",
                      "type": "array"
                    }
                  }
                },
                "Operations": {
                  "default": [
                    "update"
                  ],
                  "contains": {
                    "type": [
                      "string"
                    ]
                  },
                  "description": "The deployment operations to complete for each deployment",
                  "type": "array",
                  "enum": [
                    "create",
                    "update",
                    "delete"
                  ]
                }
              },
              "required": [
                "Membership"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Processors": {
      "description": "Compute resources and hardware type",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Processors": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "nat": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Processor": {
                      "type": "string"
                    }
                  }
                },
                "cache": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Processor": {
                      "type": "string"
                    },
                    "CountPerZone": {
                      "default": 1,
                      "type": "number"
                    }
                  }
                },
                "ecs": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "Processor": {
                      "type": "string"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                },
                "ec2": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Processor": {
                      "type": "string"
                    }
                  }
                },
                "service": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                },
                "computecluster": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "Processor": {
                      "type": "string"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                },
                "containerservice": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                },
                "bastion": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Processor": {
                      "type": "string"
                    }
                  }
                },
                "emr": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "DesiredTaskPerZone": {
                      "default": 1,
                      "type": "number"
                    },
                    "Processor": {
                      "type": "string"
                    },
                    "DesiredCorePerZone": {
                      "default": 1,
                      "type": "number"
                    }
                  }
                },
                "db": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "Processor": {
                      "type": "string"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                },
                "es": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Master": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Processor": {
                          "type": "string"
                        },
                        "Count": {
                          "default": 0,
                          "type": "number"
                        }
                      }
                    },
                    "Processor": {
                      "type": "string"
                    },
                    "CountPerZone": {
                      "default": 1,
                      "type": "number"
                    }
                  }
                },
                "containerhost": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "MinPerZone": {
                      "type": "number"
                    },
                    "DesiredPerZone": {
                      "type": "number"
                    },
                    "MaxPerZone": {
                      "type": "number"
                    },
                    "MaxCount": {
                      "type": "number"
                    },
                    "DesiredCount": {
                      "type": "number"
                    },
                    "MinCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    },
    "Accounts": {
      "description": "The deployment provider account layer",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Accounts": {
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_-]*$": {
              "properties": {
                "ProviderId": {
                  "description": "The unique Id of the account from the provider",
                  "type": "string"
                },
                "S3": {
                  "description": "Account level S3/Object store configuration",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Versioning": {
                      "description": "Enable versioning on all account level object stores",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        }
                      }
                    },
                    "Encryption": {
                      "description": "At-rest encryption management",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "EncryptionSource": {
                          "default": "EncryptionService",
                          "description": "The encryption service to use to encrypt data",
                          "type": "string",
                          "enum": [
                            "EncryptionService",
                            "aws:kms",
                            "localservice",
                            "aes256"
                          ]
                        },
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        },
                        "Encryption": {
                          "default": false,
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "aws:ecsAccountSettings": {
                  "default": {
                    "containerInstanceLongArnFormat": true,
                    "serviceLongArnFormat": true,
                    "taskLongArnFormat": true,
                    "awsvpcTrunking": true
                  },
                  "description": "AWS manage account level configuration of the Elastic Container Service",
                  "type": "object"
                },
                "Description": {
                  "description": "A description of the account",
                  "type": "string"
                },
                "Modules": {
                  "description": "Modules to import and apply for any component that belongs to the account",
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/module"
                },
                "Encryption": {
                  "description": "Manage Account level encryption keys",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Alias": {
                      "description": "Control the alias of the KMS Key",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "IncludeSeed": {
                          "default": false,
                          "description": "Include a unique seed in the alias to ensure it is unique in the account",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "Name": {
                  "description": "A hamlet specific unique name for the Account - Uses Id if not defined",
                  "type": "string"
                },
                "Profiles": {
                  "description": "Account wide profiles to apply to account and child resources",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Policy": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "description": "The id of a PolicyProfile Reference or Account attribute to apply to all components",
                      "type": "array"
                    },
                    "Deployment": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "description": "The id of a DeploymentProfile Reference or Account attribute to apply to all components",
                      "type": "array"
                    }
                  }
                },
                "Console": {
                  "description": "Configuration control for virtual machine consoles",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Encryption": {
                      "description": "Enable encryption of all content between the virtual machine and the console service",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "DedicatedKey": {
                          "default": false,
                          "description": "Use a dedicated KMS key instead of the default account kms key",
                          "type": "boolean"
                        }
                      }
                    },
                    "LoggingDestinations": {
                      "default": [
                        "s3"
                      ],
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "description": "AWS: where logs from the console session will be sent",
                      "type": "array",
                      "enum": [
                        "cloudwatch",
                        "s3"
                      ]
                    }
                  }
                },
                "Operations": {
                  "description": "Account wide control over the operations object store created within segments",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Expiration": {
                      "description": "The maximum time to keep opbjects in operations stores",
                      "type": "number"
                    }
                  }
                },
                "CostCentre": {
                  "description": "A cost centre tag to apply to all components the account belongs to",
                  "type": "string"
                },
                "Plugins": {
                  "description": "Pluings to import and apply for any component that belongs to the account",
                  "$ref": "https://docs.hamlet.io/schema/latest/AttributeSet-schema.json#/definitions/plugin"
                },
                "Logging": {
                  "description": "Account level resource logging configuration",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Encryption": {
                      "description": "Manage at-rest encryption of log storage",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "DeploymentProfiles": {
                  "description": "Account specific DeploymentProfiles to apply across all account components",
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "PolicyProfiles": {
                  "description": "Account specific PolicyProfiles to apply across all account components",
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "Title": {
                  "description": "A long form title of the account for documentation",
                  "type": "string"
                },
                "Registry": {
                  "description": "Manage the registries used to host account based copies for images",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Registries": {
                      "description": "Defines the registries available for image hosting",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "pipeline": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "contentnode": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "lambda": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "spa": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "openapi": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "rdssnapshot": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "snapshotstore",
                              "const": "snapshotstore",
                              "description": "How the images are stored",
                              "type": "string"
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "lambda_jar": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "scripts": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "dataset": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "swagger": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "objectstore",
                              "const": "objectstore",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        },
                        "docker": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "Storage": {
                              "default": "providerregistry",
                              "const": "providerregistry",
                              "description": "How the images are stored",
                              "type": [
                                "array",
                                "boolean",
                                "number",
                                "object",
                                "string"
                              ]
                            },
                            "Enabled": {
                              "default": true,
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "ReplicaRegions": {
                      "description": "A list of regions to replicate registries to",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "ProviderIds": {
                          "contains": {
                            "type": [
                              "string"
                            ]
                          },
                          "description": "The provider Ids of provider accounts to share with",
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "Provider": {
                  "default": "aws",
                  "description": "The name of the provider that the account belongs to",
                  "type": "string"
                },
                "Audit": {
                  "description": "Manage the object store audit logging",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Expiration": {
                      "description": "The duration to keep logs for",
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    "Offline": {
                      "description": "The duration to keep logs before sending to offline storage",
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  }
                },
                "Volume": {
                  "description": "Account wide controls over block storage volumes",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "Encryption": {
                      "description": "Manage at-rest encryption of volumes",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Enabled": {
                          "default": false,
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "Seed": {
                  "description": "A random seed to ensure global resource names are unique",
                  "type": "string"
                },
                "Region": {
                  "description": "The id of a Region Reference to use as the default",
                  "type": "string"
                },
                "aws:SES": {
                  "description": "AWS: Simple Email Service Account wide configuration",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "RuleSet": {
                      "description": "Ruleset details. Only one active per account",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "Name": {
                          "default": "account-default",
                          "description": "Name of the ruleset",
                          "type": "string"
                        }
                      }
                    },
                    "IPAccessPolicy": {
                      "default": "allow",
                      "description": "Controls how IPAddressGroups are handled - deny: deny these groups - allow: only allow these groups",
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "IPAddressGroups": {
                      "contains": {
                        "type": [
                          "string"
                        ]
                      },
                      "type": "array"
                    }
                  }
                },
                "Id": {
                  "description": "A hamlet specific unique Id for the Account",
                  "type": "string"
                },
                "Domain": {
                  "description": "The id of a Domain Reference to use as the default",
                  "type": "string"
                }
              },
              "required": [
                "Seed"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      }
    }
  },
  "$id": "https://docs.hamlet.io/schema/latest/Blueprint-schema.json"
}
